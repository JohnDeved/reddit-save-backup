name: Daily Stored JSON Check

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 * * *'  # daily at midnight

jobs:
  check-stored-json:
    runs-on: ['self-hosted', 'linux', 'x64', 'eu']
    steps:
      - name: Install GNU parallel
        run: sudo apt-get install -y parallel

      - name: Fetch and analyze stored.json
        env:
          GH_TOKEN: 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
        run: |
          warm_cache() {
            local url=$1
            local max_attempts=5
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Attempt $attempt for $url"
              headers_file=$(mktemp)
              http_code=$(curl -s "$url" -o /dev/null -D "$headers_file" -w '%{http_code}')
              
              echo "::group::Response Headers"
              cat "$headers_file"
              echo "::endgroup::"
              
              cf_status=$(grep -i "cf-cache-status" "$headers_file" | awk '{print $2}' | tr -d '\r' || echo "NONE")
              
              if [ "$http_code" = "200" ] && [ "$cf_status" = "HIT" ]; then
                echo "✅ Response Code: $http_code, Cache: $cf_status"
                rm "$headers_file"
                return 0
              else
                echo "⏳ Response Code: $http_code, Cache: $cf_status"
                sleep 2
              fi
              
              rm "$headers_file"
              attempt=$((attempt + 1))
            done
            
            echo "❌ Failed to get cache HIT after $max_attempts attempts"
            return 1
          }
          export -f warm_cache

          gh api \
            -H "Accept: application/vnd.github.v3.raw" \
            /repos/JohnDeved/reddit-save-backup/contents/stored.json \
            > stored.json
          echo "Number of entries: $(jq length stored.json)"
          echo "Warming up CDN cache (max 5 parallel jobs):"
          
          # Create URLs file
          jq -r '.[] | .cdnUrl | if type == "array" then .[] else . end' stored.json | \
            sed -E 's|https?://[^/]+|https://cdn.b-j.dev|' > urls.txt
          
          # Run warm_cache in parallel
          parallel --jobs 5 --line-buffer warm_cache :::: urls.txt
